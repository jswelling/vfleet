//
// voltool_ui.cc - User interface object initialization functions.
// This file was generated by `gxv++' from `voltool.G'.
// DO NOT EDIT BY HAND.
//

#include <stdio.h>
#include <sys/param.h>
#include <sys/types.h>
#include <xview/xview.h>
#include <xview/canvas.h>
#include <xview/panel.h>
#include <xview/scrollbar.h>
#include <xview/svrimage.h>
#include <xview/termsw.h>
#include <xview/text.h>
#include <xview/tty.h>
#include <xview/xv_xrect.h>
#include "voltool_ui.h"

//
// Create object `FileMenu' in the specified instance.
//
Xv_opaque
voltool_FileMenu_create(caddr_t ip, Xv_opaque owner)
{
	extern Menu_item	load_callback(Menu_item, Menu_generate);
	extern Menu_item	quit_callback(Menu_item, Menu_generate);
	Xv_opaque	obj;
	
	obj = xv_create(XV_NULL, MENU_COMMAND_MENU,
		XV_KEY_DATA, INSTANCE, ip,
		MENU_TITLE_ITEM, "File",
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Load",
			MENU_GEN_PROC, load_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Quit",
			MENU_GEN_PROC, quit_callback,
			NULL,
		NULL);
	return obj;
}

//
// Create object `RenderMenu' in the specified instance.
//
Xv_opaque
voltool_RenderMenu_create(caddr_t ip, Xv_opaque owner)
{
	extern Menu_item	vren_go_callback(Menu_item, Menu_generate);
	Xv_opaque	obj;
	
	obj = xv_create(XV_NULL, MENU_COMMAND_MENU,
		XV_KEY_DATA, INSTANCE, ip,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Go",
			MENU_GEN_PROC, vren_go_callback,
			NULL,
		NULL);
	return obj;
}

//
// Initialize an instance of object `mainwindow'.
//
void
voltool_mainwindow_objects::objects_initialize(Xv_opaque owner)
{
	mainwindow = mainwindow_create(owner);
	controls1 = controls1_create(mainwindow);
	FileButton = FileButton_create(controls1);
	RenderButton = RenderButton_create(controls1);
	rendercanvas = rendercanvas_create(mainwindow);
}

//
// Create object `mainwindow' in the specified instance.
//
Xv_opaque
voltool_mainwindow_objects::mainwindow_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, FRAME,
		XV_KEY_DATA, INSTANCE, this,
		XV_WIDTH, 335,
		XV_HEIGHT, 368,
		XV_LABEL, "VolTool",
		FRAME_SHOW_FOOTER, FALSE,
		FRAME_SHOW_RESIZE_CORNER, TRUE,
		NULL);
	return obj;
}

//
// Create object `controls1' in the specified instance.
//
Xv_opaque
voltool_mainwindow_objects::controls1_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 0,
		XV_Y, 0,
		XV_WIDTH, WIN_EXTEND_TO_EDGE,
		XV_HEIGHT, WIN_EXTEND_TO_EDGE,
		WIN_BORDER, FALSE,
		NULL);
	return obj;
}

//
// Create object `FileButton' in the specified instance.
//
Xv_opaque
voltool_mainwindow_objects::FileButton_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_BUTTON,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 8,
		XV_Y, 8,
		PANEL_LABEL_STRING, "File",
		PANEL_ITEM_MENU, voltool_FileMenu_create((caddr_t) this, mainwindow),
		NULL);
	return obj;
}

//
// Create object `RenderButton' in the specified instance.
//
Xv_opaque
voltool_mainwindow_objects::RenderButton_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_BUTTON,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 64,
		XV_Y, 8,
		PANEL_LABEL_STRING, "Render",
		PANEL_ITEM_MENU, voltool_RenderMenu_create((caddr_t) this, mainwindow),
		NULL);
	return obj;
}

//
// Create object `rendercanvas' in the specified instance.
//
Xv_opaque
voltool_mainwindow_objects::rendercanvas_create(Xv_opaque owner)
{
	extern void	rendercanvas_repaint_callback(Canvas, Xv_window, Rectlist *);
	extern void	rendercanvas_resize_callback(Canvas, int, int);
	Xv_opaque	obj;
	
	obj = xv_create(owner, CANVAS,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 0,
		XV_Y, 40,
		XV_WIDTH, WIN_EXTEND_TO_EDGE,
		XV_HEIGHT, WIN_EXTEND_TO_EDGE,
		CANVAS_REPAINT_PROC, rendercanvas_repaint_callback,
		CANVAS_RESIZE_PROC, rendercanvas_resize_callback,
		NULL);
	//
	// This line is here for backwards compatibility. It will be
	// removed for the next release.
	//
	xv_set(canvas_paint_window(obj), XV_KEY_DATA, INSTANCE, this, NULL);
	return obj;
}

//
// Initialize an instance of object `ImageWindow'.
//
void
voltool_ImageWindow_objects::objects_initialize(Xv_opaque owner)
{
	ImageWindow = ImageWindow_create(owner);
	canvas1 = canvas1_create(ImageWindow);
}

//
// Create object `ImageWindow' in the specified instance.
//
Xv_opaque
voltool_ImageWindow_objects::ImageWindow_create(Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, FRAME_CMD,
		XV_KEY_DATA, INSTANCE, this,
		XV_WIDTH, 416,
		XV_HEIGHT, 425,
		XV_LABEL, "Image",
		XV_SHOW, FALSE,
		FRAME_SHOW_FOOTER, TRUE,
		FRAME_SHOW_RESIZE_CORNER, TRUE,
		FRAME_CMD_PUSHPIN_IN, FALSE,
		NULL);
	xv_set(xv_get(obj, FRAME_CMD_PANEL), WIN_SHOW, FALSE, NULL);
	return obj;
}

//
// Create object `canvas1' in the specified instance.
//
Xv_opaque
voltool_ImageWindow_objects::canvas1_create(Xv_opaque owner)
{
	extern void	imagecanvas_repaint_callback(Canvas, Xv_window, Rectlist *);
	extern void	imagecanvas_resize_callback(Canvas, int, int);
	Xv_opaque	obj;
	
	obj = xv_create(owner, CANVAS,
		XV_KEY_DATA, INSTANCE, this,
		XV_X, 0,
		XV_Y, 0,
		XV_WIDTH, WIN_EXTEND_TO_EDGE,
		XV_HEIGHT, WIN_EXTEND_TO_EDGE,
		CANVAS_REPAINT_PROC, imagecanvas_repaint_callback,
		CANVAS_RESIZE_PROC, imagecanvas_resize_callback,
		NULL);
	//
	// This line is here for backwards compatibility. It will be
	// removed for the next release.
	//
	xv_set(canvas_paint_window(obj), XV_KEY_DATA, INSTANCE, this, NULL);
	return obj;
}

